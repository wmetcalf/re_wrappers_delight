name: Build

on:
  workflow_dispatch:
  pull_request:
  #push:
    #branches:
      #- master

jobs:
  cibw_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: "ubuntu-22.04"
          arch: "x86_64"
        - os: "ubuntu-22.04"
          arch: "aarch64"
        - os: "macos-13"
          arch: "x86_64"
          macosx_deployment_target: "13.0"
        - os: "macos-14"
          arch: "arm64"
          macosx_deployment_target: "14.0"
        - os: "windows-latest"
          arch: "auto64"
          triplet: "x64-windows"
        - os: "windows-latest"
          arch: "auto32"
          triplet: "x86-windows"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.9'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones, plus cross-compile on macos
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_TEST_SKIP: "*_arm64 *universal2:arm64 *linux_i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: "*musllinux* *i686"
          CIBW_BEFORE_ALL_LINUX: >
            yum -y update && yum -y install epel-release && yum install -y re2-devel ninja-build
          CIBW_BEFORE_ALL_MACOS: >
            brew install re2 pybind11
          # macos target should be at least 10.13 to get full c++17
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=${{ matrix.macosx_deployment_target }}
          CIBW_BEFORE_ALL_WINDOWS: >
            vcpkg install pkgconf:${{ matrix.triplet }} re2:${{ matrix.triplet }}
            && vcpkg integrate install
          CIBW_ENVIRONMENT_WINDOWS: 'CMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake'
          CIBW_TEST_REQUIRES: ""
          CIBW_TEST_COMMAND: ""

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.9'

      - name: Build sdist
        run: |
          pip install build
          python -m build -s .

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  check_artifacts:
    needs: [build_sdist, cibw_wheels]
    defaults:
      run:
        shell: bash
    name: Check artifacts are correct
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: artifacts

      # note wheels should be in subdirectories named <artifact_name>
      - name: Check number of downloaded artifacts
        run: ls -l artifacts/
